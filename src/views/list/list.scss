@use '@/styles/colors';
@use '@/styles/mixins';
@use '@/styles/variables';
@use 'sass:color';

.list {
    margin: 5em 0;
    .list__top {
        display: flex;
        gap: 1em;
        margin: 0 1em;
        justify-content: space-between;
        .user-container {
            display: flex;
            flex-wrap: wrap;
            width: fit-content;
            max-width: 70%;
            cursor: pointer;
            .user-image {
                width: 30px;
                height: 30px;
                border-radius: variables.$radius-round;
            }
        }
        .clear-done {
            white-space: nowrap;
            font-size: 12px;
            text-decoration: underline;
            text-align: end;
            cursor: pointer;
        }
    }
    .list__header {
        @include mixins.flexbox();
        margin-top: 1em;
        flex-direction: column;
        .list__header--title {
            @include mixins.flexbox();
            gap: 10px;
            position: relative;
            padding: 0 1em;
            input {
                all: unset;                
                font-family: variables.$primary-font;
                font-size: 14px;
                outline: 1px solid colors.$gray-font;
                border-radius: variables.$radius-s;
                padding: 6px 12px;
                &:focus {
                    outline-color: colors.$primary;
                }
            }
            .title-error {
                position: absolute;
                left: 0;
                bottom: -16px;
                font-size: 12px;
                color: colors.$danger;
                text-align: center;
            }
            .icon {
                width: 29px;
                height: 29px;
                border-radius: variables.$radius-round;
                @include mixins.grid-center();
                cursor: pointer;
            }
            .check {
                background-color: colors.$success;
            }
            .cancel {
                background-color: colors.$danger;
            }
        }
        .error-input {
            margin-bottom: 1em;
            input {
                outline-color: colors.$danger;
                &:focus {
                    outline-color: colors.$danger;
                }

            }
        }

        .update-date {
            font-size: 12px;

        }
    }
    .btn__favorite {
        margin-left: 10px;
        margin-bottom: 1em;
    }
    .item-container {
        width: 100%;
        cursor: grab;
        display: flex;
        flex-direction: column;
        gap: 12px;
        padding-bottom: 5em;
    }
    .empty {
        user-select: none;
        opacity: 40%;
        margin: 0 1em;
        font-style: italic;
        text-align: center;
        @include mixins.grid-center();
    }
    .delete__menu, .assign__menu {
        position: fixed;
        bottom: 1em;
        width: 40px;
        transition: width 0.3s;
        background-color: colors.$primary-accent;
        z-index: 99999;
    }
    .delete__menu {
        left: 2em;
    }
    .delete__menu--closed, .assign__menu--closed {
        border-radius: variables.$radius-round;

        cursor: pointer;
        @include mixins.grid-center();
        svg {
            padding: 10px;
            color: colors.$secondary-bg;
        }
    }
    .delete__menu--open {
        padding: 8px 14px;
    }
    .assign__menu--open {
        padding: 4px 14px;
    }
    .delete__menu--open, .assign__menu--open {
        width: calc(100% - 4em);
        font-size: 14px;
        border-radius: variables.$radius-l;

        .delete__menu--options, .assign__menu--options {
            overflow: hidden;
            white-space: nowrap;
            display: flex;
            align-items: center;
            justify-content: space-evenly;
            gap: 4px;
            .delete__option, .assign__option {
                flex: 1;
                text-align: center;
                cursor: pointer;
                &[active=true] {
                    background-color: color.scale(colors.$primary-accent, $lightness: 20%);
                    border-radius: variables.$radius-s;
                    padding: 4px 0;
                }
            }
            p {
                color: colors.$primary-font-dark;
            }
        }
    }
    .assign__menu {
        right: 2em;
    }
    .checkbox-container {
        position: fixed;
        right: 2em;
        bottom: 2em;
        @include mixins.flexbox();
        gap: 8px;
        z-index: 10;
        p {
            font-size: 12px;
        }
        input {
            cursor: pointer;
            width: 25px;
            height: 25px;
            border-radius: variables.$radius-round;
            background-color: colors.$gray-font;
            appearance: none;
            padding: 0;
            margin: 0;
            &:checked {
                background-color: colors.$success;
            }
            
        }
        label {
            display: none;
            position: absolute;
            pointer-events: none;
            bottom: 3px;
            right: 3px;
            svg {
                font-size: 18px;
                color: colors.$secondary-bg;
                pointer-events: none;
            }
        }
        input:checked ~ label {
            display: block;
        }

        .checkbox-container--check {
            display: flex;
        }
    }
}
.loader {
    @include mixins.loader();
}
.sortable-chosen {
    background: color.scale(colors.$secondary-bg, $blackness: 10%);
}
.error-text {
    text-align: center;
    margin-bottom: 2em;
}

body.dark {
    .list {
        .list__header {
            input {
                color: colors.$primary-font-dark;
            }
            .list__header--title {
                .change-title {
                    cursor: pointer;
                    color: colors.$primary-font-dark;
                }
                input {
                    background-color: colors.$primary-font;
                }
            }
        }
        .checkbox-container {
            label {
                svg {
                    color: colors.$secondary-bg-dark;
                }
            }
        }
    }
    .sortable-chosen {
        background: color.scale(colors.$secondary-bg-dark, $lightness: 10%);
    }
}

@media screen and (max-height: 500px) {
    .list {
        &:focus-within {
            .delete__menu, .assign__menu {
                display: none;
            }
            .checkbox-container {
                display: none;
            }
        }
    }
}

@media screen and (min-width: 786px) {
    .list {
        .delete__menu {
            left: calc(50vw - clamp(100px, 45vw, 560px));
        }
        .delete__menu--open {
            width: 300px;
        }
        .assign__menu--open {
            width: 400px;
        }
        &:focus-within {
            .delete__menu {
                display: grid;
            }
        }
        .assign__menu {
            right: calc(50vw - clamp(100px, 45vw, 560px));
        }
    }
}