@use '@/styles/colors';
@use '@/styles/variables';
@use '@/styles/mixins';

.assign-user {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: grid;
    place-items: center;
    background-color: colors.$overlay;
    z-index: 99999;
    .assign-user__container {
        @include mixins.flexbox($justify : space-between);
        flex-direction: column;
        gap: 30px;
        width: calc(100% - 2em);
        height: fit-content;
        min-height: 50%;
        max-height: 90vh;
        overflow-y: auto;
        background-color: colors.$primary-bg;
        padding: 1em;
        border-radius: 12px;
        .item {
            display: flex; 
            flex-direction: column;
            width: 100%;
            gap: 15px;
            .button {
                flex: 1;
            }
        }
        .assign__item {
            display: flex;
            flex-direction: column;
            position: relative;
            width: 100%;
            input {
                all: unset;
                outline: 1px solid colors.$gray-font;
                outline-offset: -1px;
                border-radius: 4px;
                padding: 8px 10px;
                font-family: variables.$primary-font;
                font-size: 14px;
                &:focus {
                    outline-color: colors.$primary;
                }
            }
            label {
                pointer-events: none;
                position: absolute;
                top: calc(50% - 7px);
                left: 10px;
                font-size: 14px;
                transition: all 150ms;
            }
        
            input:focus ~ label, input:not(:placeholder-shown) ~ label {
                font-size: 14px;
                padding: 4px 4px 0 4px;
                background-color: colors.$primary-bg;
                top: -12px;
                z-index: 1;
            }
        }
        .users, .users__assigned {
            display: flex;
            flex-direction: column;
            gap: 10px;
            width: 100%;
            .user {
                width: 100%;
                @include mixins.flexbox($justify : space-between);
                .user__info {
                    @include mixins.flexbox();
                    gap: 8px;
                    img {
                        height: 25px;
                        width: 25px;
                        border-radius: 50%;
                    }
                    .user__info--name {
                        .email {
                            font-size: 12px;
                            color: colors.$gray-font;
                        }
                    }
                }
            }
        }
        .assign-btn {
            padding: 6px 7px;
        }
    }
}

body.dark {
    .assign-user {
        .assign-user__container {
            background-color: colors.$primary-bg-dark;
            input {
                outline: 1px solid colors.$hover-dark;
                color: colors.$primary-font-dark;
                color-scheme: dark;
            }            
            input:focus ~ label, input:not(:placeholder-shown) ~ label {
                background-color: colors.$primary-bg-dark;
            }
        }
        .users, .users__assigned {
            .user {
                .user__info {
                    .user__info--name {
                        p {
                            color : colors.$primary-font-dark;
                        }
                        .email {
                            color: colors.$hover-light;
                        }
                    }
                }
            }
        }
    }   
}


@media screen and (max-width: 340px) {
    .assign-user {
        .assign-user__container {
            .users, .users__assigned {
                .user {
                    .user__info {
                        img {
                            display: none;
                        }
                    }
                }
            }
        }   
    }
}

@media screen and (min-width: 786px) {
    .assign-user__container {
        max-width: 500px;       
    }
}